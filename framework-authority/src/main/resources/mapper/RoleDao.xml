<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.myland.framework.authority.dao.RoleDao">

    <insert id="insert" parameterType="Role" useGeneratedKeys="true"
            keyProperty="id">
        INSERT INTO auth_role
        (
        `NAME`,
        `DESCRIPTION`,
        `CREATOR`
        )
        VALUES
        (
        #{name},
        #{description},
        #{creator}
        )
    </insert>

    <delete id="deleteByPrimaryKey">
        DELETE FROM auth_role WHERE ID = #{value}
    </delete>

    <update id="updateByPrimaryKeySelective" parameterType="Role">
        UPDATE auth_role
        <set>
            <if test="name != null">`NAME` =
                #{name},
            </if>
            <if test="description != null">`DESCRIPTION` =
                #{description},
            </if>
            <if test="creator != null">`CREATOR` =
                #{creator},
            </if>
            <if test="createTime != null">`CREATE_TIME` =
                #{createTime}
            </if>
        </set>
        WHERE ID = #{id}
    </update>

    <select id="selectByPrimaryKey" resultType="Role">
        SELECT * FROM auth_role WHERE ID = #{value}
    </select>

    <select id="selectList" resultType="Role">
        SELECT auth_role.*, auth_user.name AS creatorName
        FROM auth_role LEFT JOIN auth_user ON auth_role.CREATOR = auth_user.id
        <where>
            <if test="name != null">
                AND auth_role.NAME LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="description != null">
                AND auth_role.DESCRIPTION LIKE CONCAT('%', #{description}, '%')
            </if>
            <if test="beginCreateTime != null">
                AND auth_role.CREATE_TIME >= #{beginCreateTime}
            </if>
            <if test="endCreateTime != null">
                AND #{endCreateTime} >= auth_role.CREATE_TIME
            </if>
        </where>
        ORDER BY ID DESC
    </select>

    <select id="selectAll" resultType="Role">
        SELECT * FROM auth_role
    </select>

    <!-- 自定义sql -->

    <!-- 根据角色ID获得该角色下的菜单ID集合 -->
    <select id="selectMenuIdListByRoleId" resultType="long">
        SELECT MENU_ID FROM auth_role_menu WHERE ROLE_ID = #{value}
    </select>

    <!-- 删除角色菜单关系 -->
    <delete id="delMenuRelationShip">
        DELETE FROM auth_role_menu WHERE role_id = #{value}
    </delete>

    <!-- 保存角色菜单关系 -->
    <insert id="insertMenuRelationShip">
        INSERT INTO auth_role_menu
        (
        `role_id`,
        `menu_id`
        )
        values
        <foreach collection="menuIdList" item="item" index="index" separator=",">
            (
            #{roleId},
            #{item}
            )
        </foreach>
    </insert>
</mapper>